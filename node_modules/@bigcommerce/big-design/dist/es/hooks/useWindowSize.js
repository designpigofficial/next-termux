import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { isClient } from '../utils';
import { useRafState } from './useRafState';
import { useWindowResizeListener } from './useWindowResizeListener';
export var useWindowSize = function useWindowSize() {
  var _useRafState = useRafState({
    height: isClient ? window.innerHeight : -1,
    width: isClient ? window.innerWidth : -1
  }),
      _useRafState2 = _slicedToArray(_useRafState, 2),
      state = _useRafState2[0],
      setState = _useRafState2[1];

  var resizeHandler = function resizeHandler() {
    setState({
      height: window.innerHeight,
      width: window.innerWidth
    });
  };

  useWindowResizeListener(resizeHandler);

  if (!isClient) {
    return state;
  }

  return state;
};