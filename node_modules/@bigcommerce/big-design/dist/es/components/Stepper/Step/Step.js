import { CheckIcon } from '@bigcommerce/big-design-icons';
import React, { memo } from 'react';
import { StyledDash, StyledLight, StyledSrOnlyText, StyledStep, StyledText } from './styled';
export var Step = /*#__PURE__*/memo(function (_ref) {
  var index = _ref.index,
      selectedIndex = _ref.selectedIndex,
      stepperLength = _ref.stepperLength,
      text = _ref.text;
  var isComplete = selectedIndex > index;
  var isSelected = selectedIndex === index;
  var isActive = isSelected || isComplete;
  return /*#__PURE__*/React.createElement(StyledStep, {
    display: {
      mobile: isSelected ? 'grid' : 'none',
      tablet: 'grid'
    },
    marginRight: {
      tablet: 'xSmall'
    },
    marginBottom: "xLarge"
  }, /*#__PURE__*/React.createElement(StyledLight, {
    alignItems: "center",
    backgroundColor: isActive ? 'primary' : 'secondary50',
    flexDirection: "row",
    justifyContent: "center",
    paddingHorizontal: {
      mobile: 'xSmall',
      tablet: 'none'
    },
    paddingVertical: {
      mobile: 'xxSmall',
      tablet: 'none'
    }
  }, isComplete ? /*#__PURE__*/React.createElement(CheckIcon, {
    color: "white",
    size: "large"
  }) :
  /*#__PURE__*/
  // span is needed to preserve white space inside a flex container
  React.createElement("span", null, /*#__PURE__*/React.createElement(StyledSrOnlyText, null, "Step"), " ".concat(index + 1, " "), /*#__PURE__*/React.createElement(StyledSrOnlyText, null, "of ", stepperLength))), /*#__PURE__*/React.createElement(StyledDash, {
    display: {
      mobile: 'none',
      tablet: index === stepperLength - 1 ? 'none' : 'block'
    },
    backgroundColor: isComplete ? 'primary' : 'secondary30'
  }), /*#__PURE__*/React.createElement(StyledText, {
    color: isActive ? 'secondary70' : 'secondary50'
  }, text));
});
Step.displayName = 'Step';