import { ChevronRightIcon, ExpandMoreIcon } from '@bigcommerce/big-design-icons';
import React, { memo, useEffect } from 'react';
import { Flex } from '../../../Flex';
import { useExpandable, useStore } from '../../hooks';
import { StyledExpandButton } from './styled';

var InternalToggleEditor = function InternalToggleEditor(_ref) {
  var rowId = _ref.rowId,
      toggle = _ref.toggle;

  var _useExpandable = useExpandable(rowId),
      onToggle = _useExpandable.onToggle,
      isExpandable = _useExpandable.isExpandable,
      hasExpanded = _useExpandable.hasExpanded;

  var setEditingCell = useStore(function (state) {
    return state.setEditingCell;
  });
  useEffect(function () {
    if (toggle && isExpandable) {
      onToggle(hasExpanded);
    }

    setEditingCell(null);
  }, [hasExpanded, isExpandable, onToggle, setEditingCell, toggle]);
  return isExpandable ? /*#__PURE__*/React.createElement(Flex, {
    justifyContent: "center"
  }, hasExpanded ? /*#__PURE__*/React.createElement(StyledExpandButton, {
    iconOnly: /*#__PURE__*/React.createElement(ExpandMoreIcon, null),
    onClick: function onClick() {
      onToggle(true);
    },
    title: "toggle row expanded",
    variant: "subtle"
  }) : /*#__PURE__*/React.createElement(StyledExpandButton, {
    iconOnly: /*#__PURE__*/React.createElement(ChevronRightIcon, null),
    onClick: function onClick() {
      onToggle(false);
    },
    title: "toggle row expanded",
    variant: "subtle"
  })) : null;
};

export var ToggleEditor = /*#__PURE__*/memo(InternalToggleEditor);