"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useExpandable = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var useExpandable = function useExpandable(_ref) {
  var defaultExpanded = _ref.defaultExpanded,
      onExpandedChange = _ref.onExpandedChange;

  var _useState = (0, _react.useState)(defaultExpanded !== null && defaultExpanded !== void 0 ? defaultExpanded : []),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      expandedNodes = _useState2[0],
      setExpandedNodes = _useState2[1];

  (0, _react.useEffect)(function () {
    if (defaultExpanded) {
      setExpandedNodes(defaultExpanded);
    }
  }, [defaultExpanded]);
  (0, _react.useEffect)(function () {
    if (typeof onExpandedChange === 'function') {
      onExpandedChange(expandedNodes);
    }
  }, [expandedNodes, onExpandedChange]);

  var onExpand = function onExpand(nodeId) {
    setExpandedNodes([].concat((0, _toConsumableArray2.default)(expandedNodes), [nodeId]));
  };

  var onCollapse = function onCollapse(nodeId) {
    setExpandedNodes(function (prevNodes) {
      return prevNodes.filter(function (node) {
        return node !== nodeId;
      });
    });
  };

  var onToggle = function onToggle(nodeId, isExpanded) {
    if (isExpanded) {
      onCollapse(nodeId);
    } else {
      onExpand(nodeId);
    }
  };

  return {
    expandedNodes: expandedNodes,
    onToggle: onToggle
  };
};

exports.useExpandable = useExpandable;