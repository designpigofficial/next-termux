"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useVisibleNodes = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _react = require("react");

var recursiveSearch = function recursiveSearch(_ref) {
  var nodes = _ref.nodes,
      expandedNodes = _ref.expandedNodes,
      nodeMap = _ref.nodeMap;
  return nodes.reduce(function (acc, id) {
    if (expandedNodes.includes(id)) {
      var _nodeMap$get;

      var children = (_nodeMap$get = nodeMap.get(id)) === null || _nodeMap$get === void 0 ? void 0 : _nodeMap$get.children;

      if (children) {
        var visibleChildren = recursiveSearch({
          nodes: children,
          expandedNodes: expandedNodes,
          nodeMap: nodeMap
        });
        return acc.includes(id) ? [].concat((0, _toConsumableArray2.default)(acc), (0, _toConsumableArray2.default)(visibleChildren)) : [].concat((0, _toConsumableArray2.default)(acc), [id], (0, _toConsumableArray2.default)(visibleChildren));
      }
    }

    return [].concat((0, _toConsumableArray2.default)(acc), [id]);
  }, []);
};

var buildVisibleNodes = function buildVisibleNodes(_ref2) {
  var expandedNodes = _ref2.expandedNodes,
      nodeMap = _ref2.nodeMap;
  var entries = Array.from(nodeMap.entries());
  var parentNodes = entries.filter(function (_ref3) {
    var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
        value = _ref4[1];

    return value.parent === undefined;
  }, []).map(function (_ref5) {
    var _ref6 = (0, _slicedToArray2.default)(_ref5, 1),
        id = _ref6[0];

    return id;
  });
  return recursiveSearch({
    nodes: parentNodes,
    expandedNodes: expandedNodes,
    nodeMap: nodeMap
  });
};

var useVisibleNodes = function useVisibleNodes(_ref7) {
  var expandedNodes = _ref7.expandedNodes,
      nodeMap = _ref7.nodeMap;

  var _useState = (0, _react.useState)(function () {
    return buildVisibleNodes({
      expandedNodes: expandedNodes,
      nodeMap: nodeMap
    });
  }),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      visibleNodes = _useState2[0],
      setVisibleNodes = _useState2[1];

  (0, _react.useEffect)(function () {
    setVisibleNodes(buildVisibleNodes({
      expandedNodes: expandedNodes,
      nodeMap: nodeMap
    }));
  }, [expandedNodes, nodeMap]);
  return {
    visibleNodes: visibleNodes
  };
};

exports.useVisibleNodes = useVisibleNodes;