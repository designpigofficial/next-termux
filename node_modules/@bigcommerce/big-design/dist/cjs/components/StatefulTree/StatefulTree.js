"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StatefulTree = void 0;

var _react = _interopRequireDefault(require("react"));

var _utils = require("../../utils");

var _Tree = require("../Tree");

var _hooks = require("./hooks");

var InternalStatefulTree = function InternalStatefulTree(_ref) {
  var _ref$nodes = _ref.nodes,
      nodes = _ref$nodes === void 0 ? [] : _ref$nodes,
      defaultExpanded = _ref.defaultExpanded,
      defaultSelected = _ref.defaultSelected,
      _ref$disabledNodes = _ref.disabledNodes,
      disabledNodes = _ref$disabledNodes === void 0 ? [] : _ref$disabledNodes,
      onNodeClick = _ref.onNodeClick,
      onExpandedChange = _ref.onExpandedChange,
      onSelectionChange = _ref.onSelectionChange,
      type = _ref.selectable;

  var _useFocusable = (0, _hooks.useFocusable)({
    nodes: nodes,
    type: type,
    defaultSelected: defaultSelected
  }),
      focusedNode = _useFocusable.focusedNode,
      onFocus = _useFocusable.onFocus;

  var _useExpandable = (0, _hooks.useExpandable)({
    defaultExpanded: defaultExpanded,
    onExpandedChange: onExpandedChange
  }),
      expandedNodes = _useExpandable.expandedNodes,
      onToggle = _useExpandable.onToggle;

  var _useSelectable = (0, _hooks.useSelectable)({
    defaultSelected: defaultSelected,
    disabledNodes: disabledNodes,
    nodes: nodes,
    onSelectionChange: onSelectionChange,
    type: type
  }),
      selectedNodes = _useSelectable.selectedNodes,
      onSelect = _useSelectable.onSelect;

  var nodeMap = (0, _Tree.useNodeMap)({
    nodes: nodes
  });

  var _useVisibleNodes = (0, _hooks.useVisibleNodes)({
    expandedNodes: expandedNodes,
    nodeMap: nodeMap
  }),
      visibleNodes = _useVisibleNodes.visibleNodes;

  var onKeyDown = (0, _Tree.useTreeKeyEvents)({
    onFocus: onFocus,
    onSelect: onSelect,
    onToggle: onToggle,
    nodeMap: nodeMap,
    visibleNodes: visibleNodes
  });
  return /*#__PURE__*/_react.default.createElement(_Tree.Tree, {
    nodes: nodes,
    disabledNodes: disabledNodes,
    expandable: {
      expandedNodes: expandedNodes,
      onToggle: onToggle
    },
    focusable: {
      focusedNode: focusedNode,
      onFocus: onFocus
    },
    onKeyDown: onKeyDown,
    onNodeClick: onNodeClick,
    selectable: {
      selectedNodes: selectedNodes,
      onSelect: onSelect,
      type: type
    }
  });
};

var StatefulTree = (0, _utils.typedMemo)(InternalStatefulTree);
exports.StatefulTree = StatefulTree;