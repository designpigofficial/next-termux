"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataCell = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styled = require("./styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var DataCell = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var align = _ref.align,
      children = _ref.children,
      display = _ref.display,
      isCheckbox = _ref.isCheckbox,
      verticalAlign = _ref.verticalAlign,
      width = _ref.width,
      _ref$withBorder = _ref.withBorder,
      withBorder = _ref$withBorder === void 0 ? true : _ref$withBorder,
      _ref$withPadding = _ref.withPadding,
      withPadding = _ref$withPadding === void 0 ? true : _ref$withPadding;
  return isCheckbox ? /*#__PURE__*/_react.default.createElement(_styled.StyledTableDataCheckbox, {
    align: align,
    display: display,
    width: width,
    withBorder: withBorder
  }, children) : /*#__PURE__*/_react.default.createElement(_styled.StyledTableDataCell, {
    align: align,
    display: display,
    verticalAlign: verticalAlign,
    width: width,
    withBorder: withBorder,
    withPadding: withPadding
  }, children);
});
exports.DataCell = DataCell;