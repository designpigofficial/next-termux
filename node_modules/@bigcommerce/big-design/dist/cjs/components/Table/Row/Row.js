"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Row = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _bigDesignIcons = require("@bigcommerce/big-design-icons");

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../../../utils");

var _Checkbox = require("../../Checkbox");

var _DataCell = require("../DataCell");

var _styled = require("./styled");

var _excluded = ["columns", "forwardedRef", "isDragging", "isSelectable", "isSelected", "item", "showDragIcon", "onItemSelect"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var InternalRow = function InternalRow(_ref) {
  var columns = _ref.columns,
      forwardedRef = _ref.forwardedRef,
      _ref$isDragging = _ref.isDragging,
      isDragging = _ref$isDragging === void 0 ? false : _ref$isDragging,
      _ref$isSelectable = _ref.isSelectable,
      isSelectable = _ref$isSelectable === void 0 ? false : _ref$isSelectable,
      _ref$isSelected = _ref.isSelected,
      isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,
      item = _ref.item,
      _ref$showDragIcon = _ref.showDragIcon,
      showDragIcon = _ref$showDragIcon === void 0 ? false : _ref$showDragIcon,
      onItemSelect = _ref.onItemSelect,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var onChange = function onChange() {
    if (onItemSelect) {
      onItemSelect(item);
    }
  };

  var label = isSelected ? "Selected" : "Unselected";
  return /*#__PURE__*/_react.default.createElement(_styled.StyledTableRow, (0, _extends2.default)({
    isSelected: isSelected,
    ref: forwardedRef,
    isDragging: isDragging
  }, rest), showDragIcon && /*#__PURE__*/_react.default.createElement(_DataCell.DataCell, null, /*#__PURE__*/_react.default.createElement(_bigDesignIcons.DragIndicatorIcon, null)), isSelectable && /*#__PURE__*/_react.default.createElement(_DataCell.DataCell, {
    key: "data-checkbox",
    isCheckbox: true
  }, /*#__PURE__*/_react.default.createElement(_Checkbox.Checkbox, {
    checked: isSelected,
    hiddenLabel: true,
    label: label,
    onChange: onChange
  })), columns.map(function (_ref2, columnIndex) {
    var CellContent = _ref2.render,
        align = _ref2.align,
        display = _ref2.display,
        verticalAlign = _ref2.verticalAlign,
        width = _ref2.width,
        _ref2$withPadding = _ref2.withPadding,
        withPadding = _ref2$withPadding === void 0 ? true : _ref2$withPadding;
    return /*#__PURE__*/_react.default.createElement(_DataCell.DataCell, {
      key: columnIndex,
      align: align,
      display: display,
      verticalAlign: verticalAlign,
      width: width,
      withPadding: withPadding
    }, /*#__PURE__*/_react.default.createElement(CellContent, item));
  }));
};

var Row = (0, _utils.typedMemo)( /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  return /*#__PURE__*/_react.default.createElement(InternalRow, (0, _extends2.default)({}, props, {
    forwardedRef: ref
  }));
}));
exports.Row = Row;