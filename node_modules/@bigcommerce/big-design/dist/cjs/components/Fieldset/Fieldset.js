"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Fieldset = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _Description = require("./Description");

var _Legend = require("./Legend");

var _styled = require("./styled");

var _excluded = ["className", "legend", "description", "children", "style"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Fieldset = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var className = _ref.className,
      legend = _ref.legend,
      description = _ref.description,
      children = _ref.children,
      style = _ref.style,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var renderedLegend = (0, _react.useMemo)(function () {
    if (typeof legend === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Legend.FieldsetLegend, null, legend);
    }

    if ( /*#__PURE__*/(0, _react.isValidElement)(legend) && legend.type === _Legend.FieldsetLegend) {
      return legend;
    }

    if (!legend) {
      return null;
    }

    (0, _utils.warning)('legend must be either a string or a FieldsetLegend component.');
  }, [legend]);
  var renderedDescription = (0, _react.useMemo)(function () {
    if (typeof description === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Description.FieldsetDescription, null, description);
    }

    if ( /*#__PURE__*/(0, _react.isValidElement)(description) && description.type === _Description.FieldsetDescription) {
      return description;
    }

    if (!description) {
      return null;
    }

    (0, _utils.warning)('description must be either a string or a FieldsetDescription component.');
  }, [description]);
  return /*#__PURE__*/_react.default.createElement(_styled.StyledFieldset, props, renderedLegend, renderedDescription, children);
});
exports.Fieldset = Fieldset;