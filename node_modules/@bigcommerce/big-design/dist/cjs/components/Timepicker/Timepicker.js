"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Timepicker = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _Select = require("../Select");

var _excluded = ["error", "forwardedRef", "label", "locale", "onTimeChange", "value"],
    _excluded2 = ["className", "style"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var RawTimePicker = function RawTimePicker(_ref) {
  var error = _ref.error,
      forwardedRef = _ref.forwardedRef,
      label = _ref.label,
      _ref$locale = _ref.locale,
      locale = _ref$locale === void 0 ? 'en-US' : _ref$locale,
      onTimeChange = _ref.onTimeChange,
      value = _ref.value,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var localization = (0, _utils.createLocalizationProvider)(locale);
  var options = (0, _react.useMemo)(function () {
    return (0, _utils.getTimeIntervals)(localization);
  }, [localization]);
  return /*#__PURE__*/_react.default.createElement(_Select.Select, (0, _extends2.default)({
    autoWidth: true,
    label: label,
    error: error,
    value: value,
    onOptionChange: onTimeChange,
    placeholder: "hh : mm",
    options: options,
    inputRef: forwardedRef
  }, props));
};

var Timepicker = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function (_ref2, ref) {
  var className = _ref2.className,
      style = _ref2.style,
      props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  return /*#__PURE__*/_react.default.createElement(RawTimePicker, (0, _extends2.default)({}, props, {
    forwardedRef: ref
  }));
}));
exports.Timepicker = Timepicker;