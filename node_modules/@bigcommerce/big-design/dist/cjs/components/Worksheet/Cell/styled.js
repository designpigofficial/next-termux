"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledCell = void 0;

var _bigDesignTheme = require("@bigcommerce/big-design-theme");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var StyledCell = /*#__PURE__*/_styledComponents.default.td.withConfig({
  displayName: "styled__StyledCell",
  componentId: "sc-1bt06ph-0"
})(["background-color:", ";border:", ";box-sizing:border-box;padding:", ";text-align:", ";user-select:none;", " ", " ", " & p{display:block;}"], function (_ref) {
  var theme = _ref.theme;
  return theme.colors.inherit;
}, function (_ref2) {
  var theme = _ref2.theme;
  return "".concat(theme.helpers.remCalc(0.5), " solid ").concat(theme.colors.secondary30);
}, function (_ref3) {
  var theme = _ref3.theme,
      type = _ref3.type;
  return type === 'select' ? 0 : "".concat(theme.helpers.remCalc(6), " ").concat(theme.helpers.remCalc(17));
}, function (_ref4) {
  var type = _ref4.type;

  switch (type) {
    case 'number':
      return 'right';

    case 'checkbox':
      return 'center';

    default:
      return 'left';
  }
}, function (_ref5) {
  var isSelected = _ref5.isSelected;
  return isSelected && (0, _styledComponents.css)(["border:", ";"], function (_ref6) {
    var theme = _ref6.theme;
    return "".concat(theme.helpers.remCalc(0.5), " double ").concat(theme.colors.primary);
  });
}, function (_ref7) {
  var isValid = _ref7.isValid;
  return !isValid && (0, _styledComponents.css)(["border:", ";"], function (_ref8) {
    var theme = _ref8.theme;
    return "".concat(theme.helpers.remCalc(0.5), " double ").concat(theme.colors.danger);
  });
}, function (_ref9) {
  var isEdited = _ref9.isEdited;
  return isEdited && (0, _styledComponents.css)(["background-color:", ";"], function (_ref10) {
    var theme = _ref10.theme;
    return theme.colors.warning10;
  });
});

exports.StyledCell = StyledCell;
StyledCell.defaultProps = {
  theme: _bigDesignTheme.theme
};