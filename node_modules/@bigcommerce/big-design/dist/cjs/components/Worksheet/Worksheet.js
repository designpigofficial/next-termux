"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Worksheet = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../../utils");

var _context = require("./context");

var _hooks = require("./hooks");

var _Modal = require("./Modal/Modal");

var _Row = require("./Row");

var _styled = require("./RowStatus/styled");

var _styled2 = require("./styled");

var _utils2 = require("./utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var InternalWorksheet = (0, _utils.typedMemo)(function (_ref) {
  var columns = _ref.columns,
      expandableRows = _ref.expandableRows,
      items = _ref.items,
      onChange = _ref.onChange,
      onErrors = _ref.onErrors;
  var tableRef = /*#__PURE__*/(0, _react.createRef)();
  var setRows = (0, _hooks.useStore)(function (state) {
    return state.setRows;
  });
  var setColumns = (0, _hooks.useStore)(function (state) {
    return state.setColumns;
  });
  var setExpandableRows = (0, _hooks.useStore)(function (state) {
    return state.setExpandableRows;
  });
  var setTableRef = (0, _hooks.useStore)(function (state) {
    return state.setTableRef;
  });
  var rows = (0, _hooks.useStore)((0, _react.useMemo)(function () {
    return function (state) {
      return state.rows;
    };
  }, []));
  var editedCells = (0, _hooks.useStore)((0, _react.useMemo)(function () {
    return function (state) {
      return state.editedCells;
    };
  }, []));
  var invalidCells = (0, _hooks.useStore)((0, _react.useMemo)(function () {
    return function (state) {
      return state.invalidCells;
    };
  }, []));

  var _useKeyEvents = (0, _hooks.useKeyEvents)(),
      handleKeyDown = _useKeyEvents.handleKeyDown; // Add a column for the toggle components


  var expandedColumns = (0, _react.useMemo)(function () {
    return expandableRows ? [{
      hash: '',
      header: '',
      type: 'toggle'
    }].concat((0, _toConsumableArray2.default)(columns)) : columns;
  }, [columns, expandableRows]); // Create a new reference since state mutates rows to prevent unecessary rerendering

  (0, _react.useEffect)(function () {
    return setRows((0, _toConsumableArray2.default)(items));
  }, [items, setRows]);
  (0, _react.useEffect)(function () {
    return setColumns(expandedColumns);
  }, [expandedColumns, setColumns]);
  (0, _react.useEffect)(function () {
    return setExpandableRows(expandableRows || {});
  }, [expandableRows, setExpandableRows]);
  (0, _react.useEffect)(function () {
    return setTableRef(tableRef.current);
  }, [setTableRef, tableRef]);
  (0, _react.useEffect)(function () {
    if (editedCells.length) {
      onChange((0, _utils2.editedRows)(editedCells, rows));
    }
  }, [editedCells, onChange, rows]);
  (0, _react.useEffect)(function () {
    if (typeof onErrors === 'function' && invalidCells.length) {
      onErrors((0, _utils2.invalidRows)(invalidCells, rows));
    }
  }, [invalidCells, onErrors, rows]);
  var renderedHeaders = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement("thead", null, /*#__PURE__*/_react.default.createElement("tr", null, /*#__PURE__*/_react.default.createElement(_styled.Status, null), expandedColumns.map(function (column, index) {
      return /*#__PURE__*/_react.default.createElement(_styled2.Header, {
        key: index,
        columnType: column.type
      }, column.header);
    })));
  }, [expandedColumns]);
  var renderedRows = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react.default.createElement("tbody", null, rows.map(function (_row, rowIndex) {
      return /*#__PURE__*/_react.default.createElement(_Row.Row, {
        columns: expandedColumns,
        key: rowIndex,
        rowIndex: rowIndex
      });
    }));
  }, [expandedColumns, rows]);
  var renderedModals = (0, _react.useMemo)(function () {
    return expandedColumns.filter(function (column) {
      return column.type === 'modal';
    }).map(function (column, index) {
      return /*#__PURE__*/_react.default.createElement(_Modal.WorksheetModal, {
        column: column,
        key: index
      });
    });
  }, [expandedColumns]);
  return /*#__PURE__*/_react.default.createElement(_context.UpdateItemsProvider, {
    items: rows
  }, /*#__PURE__*/_react.default.createElement(_styled2.Table, {
    onKeyDown: handleKeyDown,
    ref: tableRef,
    tabIndex: 0
  }, renderedHeaders, renderedRows), renderedModals);
});
var Worksheet = (0, _utils.typedMemo)(function (props) {
  return /*#__PURE__*/_react.default.createElement(_hooks.Provider, {
    createStore: _hooks.createStore
  }, /*#__PURE__*/_react.default.createElement(InternalWorksheet, props));
});
exports.Worksheet = Worksheet;