"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Step = void 0;

var _bigDesignIcons = require("@bigcommerce/big-design-icons");

var _react = _interopRequireWildcard(require("react"));

var _styled = require("./styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Step = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var index = _ref.index,
      selectedIndex = _ref.selectedIndex,
      stepperLength = _ref.stepperLength,
      text = _ref.text;
  var isComplete = selectedIndex > index;
  var isSelected = selectedIndex === index;
  var isActive = isSelected || isComplete;
  return /*#__PURE__*/_react.default.createElement(_styled.StyledStep, {
    display: {
      mobile: isSelected ? 'grid' : 'none',
      tablet: 'grid'
    },
    marginRight: {
      tablet: 'xSmall'
    },
    marginBottom: "xLarge"
  }, /*#__PURE__*/_react.default.createElement(_styled.StyledLight, {
    alignItems: "center",
    backgroundColor: isActive ? 'primary' : 'secondary50',
    flexDirection: "row",
    justifyContent: "center",
    paddingHorizontal: {
      mobile: 'xSmall',
      tablet: 'none'
    },
    paddingVertical: {
      mobile: 'xxSmall',
      tablet: 'none'
    }
  }, isComplete ? /*#__PURE__*/_react.default.createElement(_bigDesignIcons.CheckIcon, {
    color: "white",
    size: "large"
  }) :
  /*#__PURE__*/
  // span is needed to preserve white space inside a flex container
  _react.default.createElement("span", null, /*#__PURE__*/_react.default.createElement(_styled.StyledSrOnlyText, null, "Step"), " ".concat(index + 1, " "), /*#__PURE__*/_react.default.createElement(_styled.StyledSrOnlyText, null, "of ", stepperLength))), /*#__PURE__*/_react.default.createElement(_styled.StyledDash, {
    display: {
      mobile: 'none',
      tablet: index === stepperLength - 1 ? 'none' : 'block'
    },
    backgroundColor: isComplete ? 'primary' : 'secondary30'
  }), /*#__PURE__*/_react.default.createElement(_styled.StyledText, {
    color: isActive ? 'secondary70' : 'secondary50'
  }, text));
});
exports.Step = Step;
Step.displayName = 'Step';